{"version":3,"sources":["mockData/recipes.js","actions/recipes.js","components/AddIngredientModal.js","components/EditIngredientModal.js","components/IngredientsPage.js","components/AddDirectionModal.js","components/EditDirectionModal.js","components/DirectionsPage.js","actions/specials.js","components/SpecialsPage.js","components/AddRecipeModal.js","components/EditRecipeModal.js","components/Home.js","reducers/recipes.js","reducers/specials.js","reducers/index.js","state/store.js","App.js","index.js"],"names":["mockRecipes","recipes","uuid","title","description","images","full","medium","small","servings","prepTime","cookTime","postDate","editDate","ingredients","amount","measurement","name","directions","instructions","optional","specials","ingredientId","type","geo","text","code","GET_RECIPES_SUCCESS","require","ADD_RECIPE","GET_CURRENT_RECIPE_SUCCESS","UPDATE_INGREDIENT","ADD_NEW_INGREDIENT","UPDATE_DIRECTION","ADD_NEW_DIRECTION","UPDATE_RECIPE","getCurrentRecipe","recipeId","dispatch","getState","recipe","currentRecipe","recipesList","filter","console","log","saveCurrentRecipe","getRecipesSuccess","useStyles","makeStyles","theme","root","flexGrow","form","margin","spacing","width","borderTop","borderRight","borderLeft","paddingBottom","marginLeft","marginTop","AddIngredient","props","classes","onClose","open","useState","setName","setAmount","setMeasurement","handleClose","useDispatch","Dialog","maxWidth","fullWidth","aria-labelledby","DialogTitle","id","className","noValidate","autoComplete","InputLabel","TextField","placeholder","onChange","e","target","value","Box","mb","ml","pb","Button","onClick","newIngredient","uuidv4","ingredient","size","variant","color","paper","height","EditIngredient","currentIngredient","useEffect","moment","format","specialsButton","navButtonContainer","marginRight","right","position","gridList","flexWrap","overflow","paddingTop","card","display","overflowY","Ingredients","history","useHistory","useParams","setOpen","openForEdit","setOpenForEdit","setCurrentIngredient","useSelector","state","Fragment","AppBar","Toolbar","Typography","push","ingredientsList","Grid","container","justify","map","tile","index","item","xs","sm","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","disableSpacing","handleClickEditOpen","addRecipeButton","AddDirection","setOptional","instruction","setInstruction","React","openOptions","setOptionsOpen","TextareaAutosize","rowsMax","aria-label","FormControl","Select","labelId","onOpen","MenuItem","direction","EditDirection","currentDirection","directionIndex","menuButton","left","directionsList","directionsInstruction","fontSize","directionsOptional","Directions","setCurrentDirection","currentDirectionIndex","setCurrentDirectionIndex","undefined","GET_SPECIALS_SUCCESS","getSpecials","boldText","fontWeight","specialsTitle","Specials","specialsList","classNane","AddRecipe","setTitle","setDescription","setServings","setPrepTime","setCookTime","setIngredients","setDriections","label","inputProps","step","data","arr","formInstruction","formDirection","dateAndTime","newRecipe","EditRecipe","styled","span","padding","textAlign","palette","secondary","recipeList","backgroundColor","background","paddingLeft","paddingRight","media","App","setCurrentRecipe","loadRecipes","md","CardMedia","image","src","foodItem","pathname","initialState","recipesReducer","action","produce","draft","loading","recipeIndex","findIndex","ingredientIndex","updateIngredientsIndex","newIngredientsIndex","updateDirectionsIndex","newDirectionsIndex","specialsReducer","rootReducer","combineReducers","persistConfig","key","storage","rLogger","createLogger","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","thunk","persistor","persistStore","exact","path","Home","render","document","querySelector"],"mappings":"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","file":"static/js/main.0cec4ad5.chunk.js","sourcesContent":["export const mockRecipes = {\n  recipes: [\n    {\n      uuid: \"e80ea521-4d42-48fe-a7a6-ac8952bc0de4\",\n      title: \"Queso Brat Scramble\",\n      description: \"A delicious breakfast, fit for a crowd.\",\n      images: {\n        full: \"/img/queso_brat_scramble.jpg\",\n        medium: \"/img/queso_brat_scramble--m.jpg\",\n        small: \"/img/queso_brat_scramble--s.jpg\",\n      },\n      servings: 5,\n      prepTime: 10,\n      cookTime: 20,\n      postDate: \"01/20/2018 05:15:03 PM\",\n      editDate: \"02/05/2018 11:56:29 PM\",\n      ingredients: [\n        {\n          uuid: \"62798278-2fbc-4c31-98de-b7959c191688\",\n          amount: 1,\n          measurement: \"package (19 oz)\",\n          name: \"queso brats\",\n        },\n        {\n          uuid: \"2df619ea-8472-48f4-9615-3f387a492d22\",\n          amount: 8,\n          measurement: \"tablespoons\",\n          name: \"canola oil\",\n        },\n        {\n          uuid: \"fee4a89c-8c27-4073-9055-a0b052a1c079\",\n          amount: 4,\n          measurement: \"\",\n          name: \"corn tortillas, cut into 1/2-inch squares\",\n        },\n        {\n          uuid: \"6278b9e5-3862-44f8-97b0-5bd37bb70141\",\n          amount: 0.5,\n          measurement: \"\",\n          name: \"small red onion, diced\",\n        },\n        {\n          uuid: \"41785201-9596-4ebc-b8ea-1feb562ebc53\",\n          amount: 1,\n          measurement: \"\",\n          name: \"small red pepper, diced\",\n        },\n        {\n          uuid: \"34918edd-b5fd-475c-9a13-364632971938\",\n          amount: 1,\n          measurement: \"\",\n          name: \"jalapeno pepper, seeded and chopped\",\n        },\n        {\n          uuid: \"75fe2545-4053-40bd-9c4f-150b61a052fb\",\n          amount: 2,\n          measurement: \"cloves\",\n          name: \"garlic, minced\",\n        },\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 8,\n          measurement: \"\",\n          name: \"eggs\",\n        },\n        {\n          uuid: \"7fbce07e-b640-4f36-8a7f-d094dc04d7d2\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"half-and-half cream\",\n        },\n        {\n          uuid: \"cdfa1350-3190-46b5-8f4d-4dfdadee7e39\",\n          amount: 1.5,\n          measurement: \"teaspoons\",\n          name: \"chili powder\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 0.5,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"885293b6-50ae-4ffd-b6d4-32b795d96031\",\n          amount: 5,\n          measurement: \"dashes\",\n          name: \"hot sauce, more to taste\",\n        },\n        {\n          uuid: \"da6965ac-b6c4-4715-b3d5-2a24f236650a\",\n          amount: 1,\n          measurement: \"cup\",\n          name: \"halved grape tomatoes\",\n        },\n        {\n          uuid: \"5f79e3c0-f214-4226-a660-1049778355a8\",\n          amount: 0.5,\n          measurement: \"cup\",\n          name: \"canned black beans, rinsed and drained\",\n        },\n        {\n          uuid: \"86c9eb8e-3ff6-4d4f-83d7-ea4d9f1ae455\",\n          amount: 1,\n          measurement: \"cup\",\n          name: \"pepper jack cheese, shredded\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            \"Cook brats according to package directions. Cool slightly and halve and slice.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In a large skillet, over medium heat, heat 1/2 cup oil in a skillet, add tortilla squares; fry until crisp.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"With a slotted spoon remove tortilla to a paper-towel lined plate to drain.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In another skillet, sauté the onion, pepper, jalapeno and garlic in the remaining 1 tablespoon oil.\",\n          optional: false,\n        },\n        {\n          instructions: \"Remove from pan and keep warm.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In a bowl, combine the eggs, cream, chili powder, salt and hot sauce. \",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Pour into skillet; cook, stirring occasionally until set.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Add the brats, tomatoes, black beans and tortillas; heat through.\",\n          optional: false,\n        },\n        {\n          instructions: \"Sprinkle with cheese.\",\n          optional: true,\n        },\n        {\n          instructions: \"Serve immediately.\",\n          optional: false,\n        },\n      ],\n    },\n    {\n      uuid: \"7f8e872d-47a5-44e6-b1ad-7b7cb94f1d30\",\n      title: \"Italian Meatballs\",\n      description: \"Quick, easy and authentic.\",\n      images: {\n        full: \"/img/italian_meatballs.jpg\",\n        medium: \"/img/italian_meatballs--m.jpg\",\n        small: \"/img/italian_meatballs--s.jpg\",\n      },\n      servings: 6,\n      prepTime: 25,\n      cookTime: 20,\n      postDate: \"02/19/2018 12:47:42 AM\",\n      editDate: \"02/19/2018 01:12:05 AM\",\n      ingredients: [\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 1,\n          measurement: \"\",\n          name: \"egg, lightly beaten\",\n        },\n        {\n          uuid: \"6d5dce01-b305-4df1-875e-1354a048bcea\",\n          amount: 0.333,\n          measurement: \"cup\",\n          name: \"dry bread crumbs\",\n        },\n        {\n          uuid: \"0c62dd1d-7b0f-4471-ba06-df220177ae39\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"parmesan cheese, grated\",\n        },\n        {\n          uuid: \"aa1ff525-4190-4a66-8d12-3f383a752b55\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"milk\",\n        },\n        {\n          uuid: \"6278b9e5-3862-44f8-97b0-5bd37bb70141\",\n          amount: 0.25,\n          measurement: \"cup\",\n          name: \"onion, finely chopped\",\n        },\n        {\n          uuid: \"62798278-2fbc-4c31-98de-b7959c191688\",\n          amount: 1.25,\n          measurement: \"lbs\",\n          name: \"ground italian sausage\",\n        },\n      ],\n      directions: [\n        {\n          instructions: \"Preheat oven to 350°F.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"In a large bowl, combine the egg, bread crumbs, grated parmesan cheese, milk and onion.\",\n          optional: false,\n        },\n        {\n          instructions: \"Add sausage to the bread crumb mixture and mix well.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Shape into 20 meatballs; arrange on a shallow baking pan.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Bake for 20 minutes or until meatballs are cooked through (160°F).\",\n          optional: false,\n        },\n        {\n          instructions: \"Serve with your favorite sauce and spaghetti.\",\n          optional: true,\n        },\n      ],\n    },\n    {\n      uuid: \"3555aec3-47e1-44d4-b8f2-607aad5cee67\",\n      title: \"Kielbasa Skillet\",\n      description: \"A polish delicacy.\",\n      images: {\n        full: \"/img/kielbasa_skillet.jpg\",\n        medium: \"/img/kielbasa_skillet--m.jpg\",\n        small: \"/img/kielbasa_skillet--s.jpg\",\n      },\n      servings: 8,\n      prepTime: 20,\n      cookTime: 20,\n      postDate: \"03/12/2018 01:51:12 PM\",\n      editDate: \"03/15/2018 04:14:03 PM\",\n      ingredients: [\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 1,\n          measurement: \"package (13.5 oz)\",\n          name: \"kielbasa sausage\",\n        },\n        {\n          uuid: \"6d5dce01-b305-4df1-875e-1354a048bcea\",\n          amount: 1,\n          measurement: \"cup\",\n          name: \"carrot, sliced into small chunks\",\n        },\n        {\n          uuid: \"6278b9e5-3862-44f8-97b0-5bd37bb70141\",\n          amount: 1,\n          measurement: \"\",\n          name: \"large onion, coarsely chopped\",\n        },\n        {\n          uuid: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n          amount: 2,\n          measurement: \"tablespoons\",\n          name: \"butter\",\n        },\n        {\n          uuid: \"efdc9267-cfbb-4e3e-90e2-1fe7287ed4e6\",\n          amount: 1,\n          measurement: \"\",\n          name: \"small head of cabbage, cut into wedges\",\n        },\n        {\n          uuid: \"e616c374-ed92-4b99-81c2-f73d180601e8\",\n          amount: 0.5,\n          measurement: \"teaspoon\",\n          name: \"dried thyme\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 0.25,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"5fc6a47f-7ef4-48ab-a5d9-384417dc63cf\",\n          amount: 0.25,\n          measurement: \"teaspoon\",\n          name: \"black pepper\",\n        },\n        {\n          uuid: \"da4df371-eb5d-44f6-905c-6c10255b24b4\",\n          amount: 2,\n          measurement: \"packages (24 oz each)\",\n          name: \"refrigerated prepared mashed potatoes\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            \"In a large skillet, sauté sausage, carrot, and onion in butter until onion is tender.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Add the cabbage, thyme, salt, and pepper. Reduce heat; simmer, covered 14-16 minutes or until cabbage is tender.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Meanwhile, heat potatoes according to package directions.\",\n          optional: false,\n        },\n        {\n          instructions: \"Serve with sausage mixture.\",\n          optional: false,\n        },\n      ],\n    },\n    {\n      uuid: \"3555aec3-47e1-44d4-b8f2-607aad5cee69\",\n      title: \"Brussel Chips\",\n      description: \"Tasty, crispy, spicy and healthy!\",\n      images: {\n        full: \"/img/brussel_chips.jpg\",\n        medium: \"/img/brussel_chips--m.jpg\",\n        small: \"/img/brussel_chips--s.jpg\",\n      },\n      servings: 4,\n      prepTime: 15,\n      cookTime: 25,\n      postDate: \"03/28/2018 01:27:51 AM\",\n      editDate: \"03/30/2018 05:51:52 PM\",\n      ingredients: [\n        {\n          uuid: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n          amount: 2,\n          measurement: \"tablespoons\",\n          name: \"butter\",\n        },\n        {\n          uuid: \"86b9842d-3025-4d27-82aa-459ef4f8ab7f\",\n          amount: 1.5,\n          measurement: \"teaspoons\",\n          name: \"dijon mustard\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 0.25,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"3d6ee987-8ffd-479c-88e0-e3eca690704f\",\n          amount: 1,\n          measurement: \"pinch\",\n          name: \"red pepper flakes\",\n        },\n        {\n          uuid: \"95e5a38d-26db-4e90-9773-d6be11a280df\",\n          amount: 1,\n          measurement: \"pound\",\n          name: \"brussel sprouts\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            \"Place a rack in top position of your oven and preheat to 325 F.\",\n          optional: false,\n        },\n        {\n          instructions: \"Line a baking sheet with aluminum foil.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Trim the stems of the Brussels sprouts to release outermost leaves, about 5 leaves from each sprout.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Place leaves in the bowl of sauce; toss with your fingers until all the leaves are evenly coated.\",\n          optional: false,\n        },\n        {\n          instructions: \"Spread leaves on the baking sheet in a single layer.\",\n          optional: false,\n        },\n        {\n          instructions:\n            \"Roast leaves in the preheated oven until wilted and lightly browned, about 15 minutes. Transfer any crispy leaves to a serving plate and continue roasting, removing crispy leaves at 5-minute intervals, until all leaves are crispy, about 10 minutes more.\",\n          optional: false,\n        },\n      ],\n    },\n    {\n      uuid: \"f8fc88dc-2f89-43fa-b431-00d90eeba521\",\n      title: \"Pancake Mountain\",\n      description: \"A giant stack of pancakes to share or to horde.\",\n      images: {\n        full: \"/img/pancake_mountain.jpg\",\n        medium: \"/img/pancake_mountain--m.jpg\",\n        small: \"/img/pancake_mountain--s.jpg\",\n      },\n      servings: 8,\n      prepTime: 15,\n      cookTime: 20,\n      postDate: \"04/14/2018 07:28:54 PM\",\n      editDate: \"04/17/2018 03:20:16 PM\",\n      ingredients: [\n        {\n          uuid: \"aa1ff525-4190-4a66-8d12-3f383a752b55\",\n          amount: 1.5,\n          measurement: \"cups\",\n          name: \"milk\",\n        },\n        {\n          uuid: \"d4fbd3ee-add4-4e86-b8bb-898a97d5be78\",\n          amount: 4,\n          measurement: \"tablespoons\",\n          name: \"white vinegar\",\n        },\n        {\n          uuid: \"811a6f12-428e-4110-abcd-508e4080bc5c\",\n          amount: 2,\n          measurement: \"cups\",\n          name: \"all-purpose flour\",\n        },\n        {\n          uuid: \"28ed1238-648b-4559-a83c-5a2fb5f4ad25\",\n          amount: 4,\n          measurement: \"tablespoons\",\n          name: \"white sugar\",\n        },\n        {\n          uuid: \"698345bd-078d-495f-b233-df1b756dd8a7\",\n          amount: 2,\n          measurement: \"teaspoons\",\n          name: \"baking powder\",\n        },\n        {\n          uuid: \"6d4176cc-0c48-4e19-9d38-bb16578423a4\",\n          amount: 1,\n          measurement: \"teaspoon\",\n          name: \"baking soda\",\n        },\n        {\n          uuid: \"210b15ac-552e-4450-b162-c0a41bb3389d\",\n          amount: 1,\n          measurement: \"teaspoon\",\n          name: \"salt\",\n        },\n        {\n          uuid: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n          amount: 2,\n          measurement: \"\",\n          name: \"eggs\",\n        },\n        {\n          uuid: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n          amount: 4,\n          measurement: \"tablespoons\",\n          name: \"butter, melted\",\n        },\n        {\n          uuid: \"c8be68ed-d83b-4e6c-ba7a-082d3dc167f4\",\n          amount: null,\n          measurement: \"\",\n          name: \"cooking spray\",\n        },\n      ],\n      directions: [\n        {\n          instructions:\n            'Combine milk with vinegar in a medium bowl and set aside for 5 minutes to \"sour\".',\n          optional: false,\n        },\n        {\n          instructions:\n            'Combine flour, sugar, baking powder, baking soda, and salt in a large mixing bowl. Whisk egg and butter into \"soured\" milk. Pour the flour mixture into the wet ingredients and whisk until lumps are gone.',\n          optional: false,\n        },\n        {\n          instructions:\n            \"Heat a large skillet over medium heat, and coat with cooking spray. Pour 1/4 cupfuls of batter onto the skillet, and cook until bubbles appear on the surface. Flip with a spatula, and cook until browned on the other side.\",\n          optional: false,\n        },\n      ],\n    },\n  ],\n  specials: [\n    {\n      uuid: \"233d8582-141a-460d-b7e1-d623afd69e7d\",\n      ingredientId: \"62798278-2fbc-4c31-98de-b7959c191688\",\n      type: \"event\",\n      title: \"Bratmas Party\",\n      geo: \"43.032446,-87.908098\",\n      text: \"Join us at Sweet Diner for this Special Holiday Event!\",\n    },\n    {\n      uuid: \"3c1aa6a4-802f-4f34-a232-bfd4d975f7b1\",\n      ingredientId: \"3d810ba9-7e4e-48aa-b2e9-7918e38b358d\",\n      type: \"local\",\n      title: \"1 Dozen, 1 Dollar\",\n      geo: \"43.044842,-87.904140\",\n      text: \"Eggs are on sale at a grocery store near you!\",\n    },\n    {\n      uuid: \"8f730f08-5ea5-48fb-bfd7-6a28337efc28\",\n      ingredientId: \"aa1ff525-4190-4a66-8d12-3f383a752b55\",\n      type: \"promocode\",\n      code: \"GETMILK\",\n      title: \"$1 off Milk\",\n      text:\n        \"Use the promocode GETMILK on Peapod and receive $1 off your next gallon!\",\n    },\n    {\n      uuid: \"c6912eeb-f686-482d-8bf4-c118510a4069\",\n      ingredientId: \"77ae45d7-659b-4cb5-a4ea-07f00e442974\",\n      type: \"sale\",\n      title: \"Eriksens Hand Rolled Butter\",\n      text:\n        \"Flash this recipe at a Roundy's near you and get 10% off Eriksens Hand Rolled Butter, salted or unsalted.\",\n    },\n  ],\n};\n","import { ContactSupportOutlined } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { mockRecipes } from \"./../mockData/recipes\";\nvar minimongo = require(\"minimongo\");\n\nexport const GET_RECIPES_SUCCESS = \"GET_RECIPES_SUCCESS\";\nexport const ADD_RECIPE = \"ADD_RECIPE\";\n\nexport const SAVE_CURRENT_RECIPE_SUCCESS = \"SAVE_CURRENT_RECIPE_SUCCESS\";\nexport const GET_CURRENT_RECIPE_SUCCESS = \"GET_CURRENT_RECIPE_SUCCESS\";\n\nexport const UPDATE_INGREDIENT = \"UPDATE_INGREDIENT\";\nexport const UPDATE_INGREDIENT_SUCCESS = \"UPDATE_INGREDIENT_SUCCESS\";\nexport const ADD_NEW_INGREDIENT = \"ADD_NEW_INGREDIENT\";\nexport const UPDATE_DIRECTION = \"UPDATE_DIRECTION\";\n\nexport const ADD_NEW_DIRECTION = \"ADD_NEW_DIRECTION\";\nexport const UPDATE_RECIPE = \"UPDATE_RECIPE\";\n\n//get all recipes\nexport function getRecipes() {\n  console.log(\"pizzaaa\");\n  return getRecipesSuccess(mockRecipes.recipes);\n\n  // Always use upsert for both inserts and modifies\n  // mockRecipes={title:'pancakes', description: 'hot pancakes ready to be served', servings:1,prepTime:1,cookTime:1, ingredients:[], directions:[]}\n  // console.log(\n  //   \"animals\",\n  //   db.recipes.find().fetch((res) => res)\n  // );\n  // const recipesLen = db.recipes;\n  // if (recipesLen) {\n\n  // }\n\n  // return axios\n  //   .get(\"http://localhost:3001/recipes\")\n  //   .then(({ data }) => {\n  //     console.log(\"old data\", data);\n  //      dispatch(getRecipesSuccess(data));\n  //   })\n  //   .catch((err) => {\n  //     dispatch({ type: \"GET_RECIPE_FAILURE\", err });\n  //   });\n}\n\n//get the current recipe by ID\nexport function getCurrentRecipe(recipeId) {\n  return function (dispatch, getState) {\n    let currentRecipe = {};\n    const recipes = getState().recipes.recipesList;\n    if (recipes) {\n      // get current recipe from state\n      currentRecipe = recipes.filter((recipe) => recipe.uuid === recipeId);\n      console.log(currentRecipe);\n    } else {\n      currentRecipe = mockRecipes.recipes.filter(\n        (recipe) => recipe.uuid === recipeId\n      );\n\n      //get current recipe from mock data\n    }\n    console.log(currentRecipe[0]);\n\n    dispatch(getCurrentRecipeSuccess(currentRecipe[0]));\n\n    // Success:\n    // Query dog (with no query options beyond a selector)\n\n    // return axios\n    //   .get(`http://localhost:3001/recipes/${recipeId}`)\n    //   .then(({ data }) => {\n    //     dispatch(getCurrentRecipeSuccess(data));\n    //   });\n  };\n}\n\nexport function loadRecipes(recipes) {\n  return getRecipesSuccess(recipes);\n}\nexport function updateRecipe(recipe) {\n  return {\n    type: UPDATE_RECIPE,\n    recipe,\n  };\n}\n\nexport function saveCurrentRecipe() {\n  return function (dispatch, getState) {\n    const recipe = getState().recipes.currentRecipe;\n    const recipes = getState().recipes.recipesList;\n    // whatever action that updates currentRecipes needs to update Recipes\n\n    console.log(\"test\", recipes);\n  };\n  //   return axios\n  //     .put(`http://localhost:3001/recipes/${recipe.uuid}`, recipe)\n  //     .then(({ data }) => dispatch(saveCurrentRecipeSuccess(data)));\n  // };\n}\n\n// export function postNewRecipe(newRecipe) {\n//   return function (dispatch) {\n//     dispatch(addRecipe(newRecipe));\n//     return axios\n//       .post(`http://localhost:3001/recipes`, newRecipe)\n//       .then(({ data }) => dispatch(saveCurrentRecipeSuccess(data)));\n//   };\n// }\n\nexport function updateIngredient(ingredient) {\n  return {\n    type: UPDATE_INGREDIENT,\n    ingredient,\n  };\n}\nexport function updateDirection(direction, directionIndex) {\n  return {\n    type: UPDATE_DIRECTION,\n    direction,\n    directionIndex,\n  };\n}\nexport function addNewIngredient(ingredient) {\n  return {\n    type: ADD_NEW_INGREDIENT,\n    ingredient,\n  };\n}\nexport function addNewDirection(direction) {\n  return {\n    type: ADD_NEW_DIRECTION,\n    direction,\n  };\n}\n\nexport function addRecipe(recipe) {\n  return {\n    type: ADD_RECIPE,\n    recipe,\n  };\n}\n\nfunction getRecipesSuccess(recipes) {\n  return {\n    type: GET_RECIPES_SUCCESS,\n    recipes,\n  };\n}\n\nexport function getCurrentRecipeSuccess(recipe) {\n  return {\n    type: GET_CURRENT_RECIPE_SUCCESS,\n    recipe,\n  };\n}\n\nexport function saveCurrentRecipeSuccess(recipe) {\n  return {\n    type: SAVE_CURRENT_RECIPE_SUCCESS,\n    recipe,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextField,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addNewIngredient, saveCurrentRecipe } from \"../actions/recipes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 100,\n    marginTop: 50,\n  },\n}));\n\nfunction AddIngredient(props) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [measurement, setMeasurement] = useState(\"\");\n\n  //close modal\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const handleMeasurementChange = (e) => {\n    setMeasurement(e.target.value);\n  };\n\n  const dispatch = useDispatch();\n\n  //add ingredient\n  function addIngredient() {\n    const newIngredient = {\n      uuid: uuidv4(),\n      amount: amount,\n      name: name,\n      measurement: measurement,\n    };\n\n    dispatch(addNewIngredient(newIngredient));\n    dispatch(saveCurrentRecipe());\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-ingredient\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-ingredient\">Edit Ingredient</DialogTitle>\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"name\">Name</InputLabel>\n          <TextField\n            id=\"name\"\n            placeholder=\"Enter the amount of servings\"\n            onChange={handleNameChange}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <TextField\n            id=\"measurement\"\n            placeholder=\"Enter the meausrement\"\n            onChange={handleMeasurementChange}\n          />\n          <InputLabel id=\"amount\">Amount</InputLabel>\n          <TextField\n            id=\"amount\"\n            type=\"number\"\n            placeholder=\"Enter the amount\"\n            onChange={handleAmountChange}\n          />\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={addIngredient}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Ingredient\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default AddIngredient;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Button,\n  TextField,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Box,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport moment from \"moment\";\n\nimport { updateIngredient, saveCurrentRecipe } from \"../actions/recipes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 300,\n    width: 100,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 90,\n    marginTop: 50,\n  },\n}));\n\nfunction EditIngredient(props) {\n  const classes = useStyles();\n  const { onClose, open, currentIngredient } = props;\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(currentIngredient.name);\n  const [measurement, setMeasurement] = useState(currentIngredient.measurement);\n  const [amount, setAmount] = useState(currentIngredient.amount);\n  console.log(currentIngredient);\n  useEffect(() => {\n    //get recipes for state\n    setName(currentIngredient.name);\n    setMeasurement(currentIngredient.measurement);\n    setAmount(currentIngredient.amount);\n  }, [\n    currentIngredient.name,\n    currentIngredient.measurement,\n    currentIngredient.amount,\n  ]);\n\n  // close modal\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n  const handleMeasurementChange = (e) => {\n    setMeasurement(e.target.value);\n  };\n\n  function editItem() {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    //new ingredient with form data\n\n    const newIngredient = {\n      uuid: currentIngredient.uuid,\n      amount: amount,\n      name: name,\n      measurement: measurement,\n    };\n\n    //update ingredient in redux\n    dispatch(updateIngredient(newIngredient));\n    dispatch(saveCurrentRecipe());\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-ingredient\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-ingredient\">Edit Ingredient</DialogTitle>\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"name\">Name</InputLabel>\n          <TextField\n            id=\"name\"\n            placeholder=\"Enter the amount of servings\"\n            onChange={handleNameChange}\n            value={name}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <TextField\n            id=\"measurement\"\n            placeholder=\"Enter the meausrement\"\n            onChange={handleMeasurementChange}\n            value={measurement}\n          />\n          <InputLabel id=\"amount\">Amount</InputLabel>\n          <TextField\n            id=\"amount\"\n            type=\"number\"\n            placeholder=\"Enter the amount\"\n            onChange={handleAmountChange}\n            value={amount}\n          />\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={editItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Finished Editing\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default EditIngredient;\n","import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  Card,\n  CardActions,\n  CardContent,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport AddIngredient from \"./AddIngredientModal\";\nimport EditIngredient from \"./EditIngredientModal\";\nimport {\n  getCurrentRecipe,\n  updateIngredient,\n  saveCurrentRecipe,\n} from \"../actions/recipes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  specialsButton: {},\n\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n    overflow: \"auto\",\n    paddingTop: 50,\n  },\n\n  card: {\n    maxWidth: 345,\n    width: 345,\n    display: \"block\",\n    overflowY: \"scroll\",\n    marginLeft: 150,\n  },\n}));\n\nfunction Ingredients() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { recipeId } = useParams();\n  const [open, setOpen] = useState(false);\n  const [openForEdit, setOpenForEdit] = useState(false);\n  const [currentIngredient, setCurrentIngredient] = useState({});\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch(getCurrentRecipe(recipeId));\n  }, []);\n\n  //grad the current ingredient from redux\n  const ingredients = useSelector(\n    (state) => state.recipes.currentRecipe.ingredients\n  );\n\n  //open the add new ingredient modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  //close the add new ingredient modal\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  //close the edit ingredient modal\n  const handleEditClose = (value) => {\n    setOpenForEdit(false);\n  };\n\n  //open the edit ingredient modal and set the current ingredient click to state\n  const handleClickEditOpen = (tile) => {\n    setCurrentIngredient(tile);\n    setOpenForEdit(true);\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Recipe List\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/specials\")}\n            >\n              View the Specials\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={handleClickOpen}\n            >\n              Add Ingredient\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/\")}\n            >\n              Go to Home Page\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <AddIngredient open={open} onClose={handleClose} />\n      <EditIngredient\n        currentIngredient={currentIngredient}\n        open={openForEdit}\n        onClose={handleEditClose}\n      />\n      <div className={classes.ingredientsList}>\n        <Grid\n          className={classes.gridList}\n          container\n          justify=\"center\"\n          spacing={1}\n        >\n          {ingredients.map((tile, index) => (\n            <Grid container item xs={12} sm={6} spacing={0.1}>\n              <Card className={classes.card}>\n                <CardActionArea>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {tile.name}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      Measurement: {tile.measurement}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      Amount: {tile.amount}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions disableSpacing>\n                  <Button\n                    onClick={() => handleClickEditOpen(tile)}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    Edit\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Ingredients;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextareaAutosize,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Select,\n  Box,\n  MenuItem,\n  FormControl,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { addNewDirection, saveCurrentRecipe } from \"../actions/recipes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 300,\n    width: 100,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 100,\n    marginTop: 50,\n  },\n  addRecipeButton: {\n    marginLeft: 40,\n    position: \"absolute\",\n  },\n}));\n\nfunction AddDirection(props) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const [optional, setOptional] = useState(false);\n  const [instruction, setInstruction] = useState(\"\");\n  const dispatch = useDispatch();\n  const [openOptions, setOptionsOpen] = React.useState(false);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  //close options modal\n  const handleOptionsClose = () => {\n    setOptionsOpen(false);\n  };\n\n  const handleInstructionChange = (e) => {\n    setInstruction(e.target.value);\n  };\n\n  const handleOptionsOpen = () => {\n    setOptionsOpen(true);\n  };\n\n  const handleOptionsChange = (e) => {\n    setOptional(e.target.value);\n  };\n\n  //add direction to state and save the current recipe\n  function addDirection() {\n    const newDirection = {\n      instructions: instruction,\n      optional,\n    };\n\n    dispatch(addNewDirection(newDirection));\n    dispatch(saveCurrentRecipe());\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-direction\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-direction\">Edit Direction</DialogTitle>\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"instruction\">Instruction</InputLabel>\n          <TextareaAutosize\n            rowsMax={4}\n            aria-label=\"instruction\"\n            placeholder=\"Enter an instruction\"\n            className=\"instruction-text-area\"\n            onChange={handleInstructionChange}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <FormControl className=\"optionalFormControl\">\n            <InputLabel className=\"optional\" id=\"optional\">\n              Optional\n            </InputLabel>\n            <Select\n              labelId=\"optional\"\n              id=\"demo-controlled-open-select\"\n              className=\"optionalLabel\"\n              open={openOptions}\n              onClose={handleOptionsClose}\n              onOpen={handleOptionsOpen}\n              onChange={handleOptionsChange}\n            >\n              <MenuItem value={false}>\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={true}>Yes</MenuItem>\n              <MenuItem value={false}>No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={addDirection}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Direction\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default AddDirection;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Button,\n  TextareaAutosize,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Select,\n  Box,\n  MenuItem,\n  FormControl,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport moment from \"moment\";\n\nimport { saveCurrentRecipe, updateDirection } from \"../actions/recipes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 90,\n    marginTop: 50,\n  },\n}));\n\nfunction EditDirection(props) {\n  const classes = useStyles();\n  const { onClose, open, currentDirection, index } = props;\n  const dispatch = useDispatch();\n  const [openOptions, setOptionsOpen] = React.useState(false);\n  const [instruction, setInstruction] = useState(currentDirection.instructions);\n  const [optional, setOptional] = useState(currentDirection.optional);\n\n  useEffect(\n    () => {\n      //set driection information to state\n      setInstruction(currentDirection.instructions);\n      setOptional(currentDirection.optional);\n    },\n    [currentDirection.instruction, currentDirection.optional],\n    index\n  );\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleInstructionChange = (e) => {\n    setInstruction(e.target.value);\n  };\n  const handleOptionsChange = (e) => {\n    setOptional(e.target.value);\n  };\n  const handleOptionsClose = () => {\n    setOptionsOpen(false);\n  };\n  const handleOptionsOpen = () => {\n    setOptionsOpen(true);\n  };\n\n  function editItem() {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    //creating a new direction\n    const newDirection = {\n      instructions: instruction,\n      optional: optional,\n    };\n\n    dispatch(updateDirection(newDirection, index));\n    dispatch(saveCurrentRecipe());\n\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"xs\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-ingredient\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-ingredient\">Edit Ingredient</DialogTitle>\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <div>\n          <InputLabel id=\"instruction\">Instruction</InputLabel>\n          <TextareaAutosize\n            rowsMax={4}\n            aria-label=\"instruction\"\n            placeholder=\"Enter an instruction\"\n            className=\"instruction-text-area\"\n            onChange={handleInstructionChange}\n            value={instruction}\n          />\n          <InputLabel id=\"measurement\">Measurement</InputLabel>\n          <FormControl className=\"optionalFormControl\">\n            <InputLabel className=\"optional\" id=\"optional\">\n              Optional\n            </InputLabel>\n            <Select\n              labelId=\"optional\"\n              id=\"demo-controlled-open-select\"\n              className=\"optionalLabel\"\n              open={openOptions}\n              onClose={handleOptionsClose}\n              onOpen={handleOptionsOpen}\n              onChange={handleOptionsChange}\n              value={optional}\n            >\n              <MenuItem value={false}>\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={true}>Yes</MenuItem>\n              <MenuItem value={false}>No</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n      </form>\n\n      <Box mb={3} ml={25} pb={3}>\n        <Button\n          onClick={editItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Edit Direction\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default EditDirection;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport {\n  AppBar,\n  makeStyles,\n  Toolbar,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  CardActionArea,\n} from \"@material-ui/core/\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getCurrentRecipe } from \"../actions/recipes\";\nimport AddDirection from \"./AddDirectionModal\";\nimport EditDirection from \"./EditDirectionModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  specialsButton: {},\n  addRecipeButton: {\n    left: 10,\n  },\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n\n  directionsList: {\n    marginLeft: 350,\n  },\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n\n    overflow: \"auto\",\n    paddingTop: 50,\n  },\n\n  card: {\n    maxWidth: 345,\n    width: 500,\n    display: \"block\",\n    overflowY: \"scroll\",\n    marginLeft: 150,\n  },\n\n  directionsInstruction: {\n    fontSize: 20,\n  },\n  directionsOptional: {\n    fontSize: 18,\n  },\n}));\n\nfunction Directions() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { recipeId } = useParams();\n  const [open, setOpen] = useState(false);\n  const [openForEdit, setOpenForEdit] = useState(false);\n  const [currentDirection, setCurrentDirection] = useState({});\n  const [currentDirectionIndex, setCurrentDirectionIndex] = useState(0);\n  const classes = useStyles();\n\n  //get current recipe by uuid in params\n  useEffect(() => {\n    dispatch(getCurrentRecipe(recipeId));\n  }, []);\n\n  const directions = useSelector(\n    (state) => state.recipes.currentRecipe.directions\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  const handleEditClose = (value) => {\n    setOpenForEdit(false);\n  };\n\n  //push current recipe to state to prefill form\n  const handleClickEditOpen = (tile, index) => {\n    setCurrentDirection(tile);\n\n    setCurrentDirectionIndex(index);\n    setOpenForEdit(true);\n  };\n\n  //change option to show yes or no\n  function changeOptionToString(value) {\n    if (value === false || value === undefined || value === \"\") {\n      return \"No\";\n    } else {\n      return \"Yes\";\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Directions\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/specials\")}\n            >\n              View the Specials\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={handleClickOpen}\n            >\n              Add Direction\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/\")}\n            >\n              Go to Home Page\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <AddDirection open={open} onClose={handleClose} />\n      <EditDirection\n        currentDirection={currentDirection}\n        open={openForEdit}\n        index={currentDirectionIndex}\n        onClose={handleEditClose}\n      />\n      <div className={classes.directionsList}>\n        <Grid\n          className={classes.gridList}\n          container\n          justify=\"center\"\n          spacing={1}\n        >\n          {directions.map((tile, index) => (\n            <Grid container item xs={12} spacing={0.1}>\n              <Card className={classes.card}>\n                <CardActionArea>\n                  <CardContent>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"div\"\n                      className=\"text-center\"\n                    >\n                      <span className={classes.directionsInstruction}>\n                        {tile.instructions}\n                      </span>\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"div\"\n                      className=\"text-center\"\n                    >\n                      <span className={classes.directionsOptional}>\n                        {\" \"}\n                        Optional: {changeOptionToString(tile.optional)}\n                      </span>\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions disableSpacing>\n                  <Button\n                    onClick={() => handleClickEditOpen(tile, index)}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    Edit\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Directions;\n","import axios from \"axios\";\nimport { mockRecipes } from \"./../mockData/recipes\";\nexport const GET_SPECIALS_SUCCESS = \"GET_SPECIALS_SUCCESS\";\n\nexport function getSpecials() {\n  return getSpecialsSuccess(mockRecipes.specials);\n\n  // return function (dispatch) {\n  //   return axios.get(\"http://localhost:3001/specials\").then(({ data }) => {\n  //     dispatch(getSpecialsSuccess(data));\n  //   });\n  // };\n}\n\nfunction getSpecialsSuccess(specials) {\n  return {\n    type: GET_SPECIALS_SUCCESS,\n    specials,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./Home.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getSpecials } from \"../actions/specials\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CardActionArea,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  specialsButton: {},\n\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n\n    overflow: \"auto\",\n    paddingTop: 50,\n  },\n\n  card: {\n    width: 500,\n    display: \"block\",\n    overflowY: \"scroll\",\n    marginLeft: 390,\n  },\n  boldText: {\n    fontWeight: \"bold\",\n  },\n  specialsTitle: {},\n}));\n\nfunction Specials() {\n  const dispatch = useDispatch();\n  const specials = useSelector((state) => state.specials);\n  const history = useHistory();\n  const classes = useStyles();\n\n  //retrieve all the specials in database\n  useEffect(() => {\n    dispatch(getSpecials());\n  }, []);\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Specials\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/\")}\n            >\n              Go to Home Page\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.specialsList}>\n        <Grid\n          className={classes.gridList}\n          container\n          justify=\"center\"\n          spacing={1}\n        >\n          {specials &&\n            specials.specialsList.map((tile, index) => (\n              <Grid container item xs={12} spacing={0.1}>\n                <Card className={classes.card}>\n                  <CardActionArea>\n                    <CardContent>\n                      <Typography variant=\"h6\" className=\"text-center\">\n                        <span className=\"specials-title\">{tile.title}</span>\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"div\"\n                        className=\"text-center\"\n                      >\n                        <span classNane=\"specials-text\">{tile.text}</span>\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"div\"\n                        className=\"text-center\"\n                      >\n                        <span className=\"specails-type\">\n                          <span className=\"bold-text\">type:</span> {tile.type}\n                        </span>\n                      </Typography>\n                      {tile.code && (\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          component=\"div\"\n                          className=\"text-center\"\n                        >\n                          <span className=\"specials-code\">\n                            <span className=\"bold-text\">USE CODE:</span>{\" \"}\n                            {tile.code}\n                          </span>\n                        </Typography>\n                      )}\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Specials;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  TextField,\n  TextareaAutosize,\n  Typography,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Select,\n  Box,\n  MenuItem,\n  FormControl,\n  Grid,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addRecipe, postNewRecipe } from \"../actions/recipes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n\n    paddingBottom: 40,\n    marginLeft: 100,\n    marginTop: 50,\n  },\n}));\n\nfunction AddRecipe(props) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const [name, setName] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [measurement, setMeasurement] = useState(\"\");\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [servings, setServings] = useState(\"\");\n  const [prepTime, setPrepTime] = useState(\"\");\n  const [cookTime, setCookTime] = useState(\"\");\n  const [optional, setOptional] = useState(false);\n  const [instruction, setInstruction] = useState(\"\");\n  const [openOptions, setOptionsOpen] = React.useState(false);\n  const [ingredients, setIngredients] = useState([]);\n  const [directions, setDriections] = useState([]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleOptionsClose = () => {\n    setOptionsOpen(false);\n  };\n\n  const handleInstructionChange = (e) => {\n    setInstruction(e.target.value);\n  };\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleServingsChange = (e) => {\n    setServings(e.target.value);\n  };\n\n  const handlePrepTimeChange = (e) => {\n    setPrepTime(e.target.value);\n  };\n\n  const handleCookTimeChange = (e) => {\n    setCookTime(e.target.value);\n  };\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const handleMeasurementChange = (e) => {\n    setMeasurement(e.target.value);\n  };\n\n  //open the options list\n  const handleOptionsOpen = () => {\n    setOptionsOpen(true);\n  };\n\n  const handleOptionsChange = (e) => {\n    setOptional(e.target.value);\n  };\n\n  //add Direction to a list before submitting\n  function addDirection() {\n    const arr = directions;\n    const formDirection = {};\n    formDirection[\"optional\"] = optional;\n    formDirection[\"instruction\"] = instruction;\n\n    if (optional === true) {\n      formDirection.optional = \"Yes\";\n    }\n    if (optional === false) {\n      formDirection.optional = \"No\";\n    }\n    arr.push(formDirection);\n    setDriections(() => [...arr]);\n  }\n\n  const dispatch = useDispatch();\n\n  //form for submitting a new recipe\n  function addFoodItem() {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    const newRecipe = {\n      uuid: uuidv4(),\n      title: title,\n      description: description,\n      servings: servings,\n      cookTime: cookTime,\n      prepTime: prepTime,\n      ingredients: ingredients,\n      directions: directions,\n      postDate: dateAndTime,\n    };\n\n    onClose();\n\n    dispatch(addRecipe(newRecipe));\n  }\n\n  //create ingredients for recipe\n  function addIngredient(data) {\n    let arr = ingredients;\n    const formInstruction = {};\n    formInstruction[\"name\"] = name;\n    formInstruction[\"amount\"] = amount;\n    formInstruction[\"measurement\"] = measurement;\n    formInstruction.uuid = uuidv4();\n\n    arr.push(formInstruction);\n    setIngredients(() => [...arr]);\n    console.log(ingredients);\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"lg\"}\n      onClose={handleClose}\n      aria-labelledby=\"add-recipe\"\n      open={open}\n    >\n      <DialogTitle id=\"add-recipe\">Add Recipe</DialogTitle>\n\n      <Grid justify=\"center\" container spacing={12}>\n        <Grid container item xs={4} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <h6>Food definition</h6>\n            <div>\n              <TextField\n                id=\"title\"\n                label=\"The name of the food\"\n                placeholder=\"Enter a name\"\n                onChange={handleTitleChange}\n              />\n              <TextareaAutosize\n                rowsMax={4}\n                aria-label=\"description\"\n                placeholder=\"Enter a description\"\n                className=\"instruction-text-area\"\n                onChange={handleDescriptionChange}\n              />\n\n              <TextField\n                id=\"servings\"\n                label=\"Servings\"\n                type=\"number\"\n                placeholder=\"Enter the amount of servings\"\n                onChange={handleServingsChange}\n              />\n              <TextField\n                id=\"prepTime\"\n                type=\"number\"\n                label=\"Prep time (in mins)\"\n                placeholder=\"Enter the prep time\"\n                onChange={handlePrepTimeChange}\n              />\n              <TextField\n                id=\"cookTime\"\n                label=\"Cook time (in mins)\"\n                type=\"number\"\n                placeholder=\"Enter the cook time\"\n                onChange={handleCookTimeChange}\n              />\n            </div>\n          </form>\n        </Grid>\n        <Grid container item xs={4} spacing={1}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <h6>Ingredients definition</h6>\n            <div>\n              <TextField\n                id=\"name\"\n                label=\"Ingredient Name\"\n                placeholder=\"Enter the ingredient name\"\n                onChange={handleNameChange}\n              />\n              <TextField\n                id=\"amount\"\n                label=\"Amount\"\n                placeholder=\"Enter the amount\"\n                inputProps={{\n                  step: 0.1,\n                }}\n                type=\"number\"\n                onChange={handleAmountChange}\n              />\n              <TextField\n                id=\"measurement\"\n                label=\"Mesurement\"\n                placeholder=\"Enter the measurement\"\n                onChange={handleMeasurementChange}\n              />\n              <Button\n                onClick={addIngredient}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Add Ingredient to List\n              </Button>\n            </div>\n          </form>\n          <ul>\n            {ingredients.map((item, index) => (\n              <li>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  <span className=\"bold-text\">Name</span> {item.name}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  <span className=\"bold-text\">Amount:</span> {item.amount}\n                </Typography>\n                <Typography gutterBottom variant=\"body2\" component=\"p\">\n                  <span className=\"bold-text\">Mesurement</span>{\" \"}\n                  {item.measurement}\n                </Typography>\n              </li>\n            ))}\n          </ul>\n        </Grid>\n        <Grid container item xs={4} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <h6>Direction definition</h6>\n            <div>\n              <TextareaAutosize\n                rowsMax={4}\n                aria-label=\"instruction\"\n                placeholder=\"Enter an instruction\"\n                className=\"instruction-text-area\"\n                onChange={handleInstructionChange}\n              />\n              <FormControl className=\"optionalFormControl\">\n                <InputLabel\n                  className=\"optional\"\n                  id=\"demo-controlled-open-select-label\"\n                >\n                  Optional\n                </InputLabel>\n                <Select\n                  labelId=\"demo-controlled-open-select-label\"\n                  id=\"demo-controlled-open-select\"\n                  className=\"optionalLabel\"\n                  open={openOptions}\n                  onClose={handleOptionsClose}\n                  onOpen={handleOptionsOpen}\n                  onChange={handleOptionsChange}\n                >\n                  <MenuItem value={false}>\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={true}>Yes</MenuItem>\n                  <MenuItem value={false}>No</MenuItem>\n                </Select>\n              </FormControl>\n              <Button\n                onClick={addDirection}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Add Direction to List\n              </Button>\n            </div>\n          </form>\n          <Box mb={15}>\n            <ul>\n              {directions.map((item, index) => (\n                <li>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\">\n                    <span className=\"bold-text\">Instruction</span>{\" \"}\n                    {item.instruction}\n                  </Typography>\n                  <Typography gutterBottom variant=\"body2\" component=\"p\">\n                    <span className=\"bold-text\">Optional</span> {item.optional}\n                  </Typography>\n                </li>\n              ))}\n            </ul>\n          </Box>\n        </Grid>\n      </Grid>\n      <Box mb={3} ml={140} pb={30}>\n        <Button\n          onClick={addFoodItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Recipe\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default AddRecipe;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  makeStyles,\n  InputLabel,\n  DialogTitle,\n  Dialog,\n  Box,\n  Grid,\n  Button,\n  TextField,\n  TextareaAutosize,\n} from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\n\nimport { updateRecipe, saveCurrentRecipe } from \"../actions/recipes\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 300,\n    width: 100,\n  },\n  form: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    \"& .instruction-text-area\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n      borderTop: \"none\",\n      borderRight: \"none\",\n      borderLeft: \"none\",\n    },\n    \"& .optionalFormControl\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    paddingBottom: 40,\n    marginTop: 50,\n  },\n}));\n\nfunction EditRecipe(props) {\n  const classes = useStyles();\n  const { onClose, open, currentRecipe } = props;\n  const dispatch = useDispatch();\n\n  console.log(currentRecipe.title);\n\n  const [title, setTitle] = useState(currentRecipe.title);\n  const [description, setDescription] = useState(currentRecipe.description);\n  const [servings, setServings] = useState(currentRecipe.servings);\n  const [prepTime, setPrepTime] = useState(currentRecipe.prepTime);\n  const [cookTime, setCookTime] = useState(currentRecipe.cookTime);\n  useEffect(() => {\n    //get set state to recipe data\n    setTitle(currentRecipe.title);\n    setDescription(currentRecipe.description);\n    setServings(currentRecipe.servings);\n    setPrepTime(currentRecipe.prepTime);\n    setCookTime(currentRecipe.cookTime);\n  }, [\n    currentRecipe.title,\n    currentRecipe.description,\n    currentRecipe.servings,\n    currentRecipe.prepTime,\n    currentRecipe.cookTime,\n  ]);\n\n  //close the add new recipe modal\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n  const handleServingsChange = (e) => {\n    setServings(e.target.value);\n  };\n  const handlePrepTimeChange = (e) => {\n    setPrepTime(e.target.value);\n  };\n\n  const handleCookTimeChange = (e) => {\n    setCookTime(e.target.value);\n    console.log(e.target.value);\n  };\n\n  function editItem(form) {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    //new recipe with form data\n    const newRecipe = {\n      uuid: currentRecipe.uuid,\n      title: title,\n      description: description,\n      servings: servings,\n      prepTime: prepTime,\n      cookTime: cookTime,\n      postDate: currentRecipe.postDate,\n      editDate: dateAndTime,\n      images: currentRecipe.images,\n      directions: currentRecipe.directions,\n      ingredients: currentRecipe.ingredients,\n    };\n    console.log(newRecipe);\n\n    //dipatch recipe to update\n    dispatch(updateRecipe(newRecipe));\n    dispatch(saveCurrentRecipe());\n\n    handleClose();\n  }\n\n  return (\n    <Dialog\n      maxWidth={\"sm\"}\n      fullWidth={true}\n      onClose={handleClose}\n      aria-labelledby=\"edit-recipe\"\n      open={open}\n    >\n      <DialogTitle id=\"edit-recipe\">Edit Recipe</DialogTitle>\n\n      <Grid justify=\"center\" container spacing={12}>\n        <Grid container item xs={6} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <div>\n              <InputLabel id=\"title\">Title of Food</InputLabel>\n              <TextField\n                id=\"title\"\n                placeholder=\"Enter a name\"\n                onChange={handleTitleChange}\n                value={title}\n              />\n              <InputLabel id=\"description\">Description</InputLabel>\n              <TextareaAutosize\n                id=\"description\"\n                rowsMax={4}\n                aria-label=\"description\"\n                placeholder=\"Enter a description\"\n                className=\"instruction-text-area\"\n                onChange={handleDescriptionChange}\n                value={description}\n              />\n            </div>\n          </form>\n        </Grid>\n        <Grid container item xs={6} spacing={3}>\n          <form className={classes.form} noValidate autoComplete=\"off\">\n            <div>\n              <InputLabel id=\"servings\">Servings</InputLabel>\n              <TextField\n                id=\"servings\"\n                type=\"number\"\n                placeholder=\"Enter the amount of servings\"\n                onChange={handleServingsChange}\n                value={servings}\n              />\n              <InputLabel id=\"prepTime\">Prep Time (in mins)</InputLabel>\n              <TextField\n                id=\"prepTime\"\n                type=\"number\"\n                placeholder=\"Enter the prep time\"\n                onChange={handlePrepTimeChange}\n                value={prepTime}\n              />\n              <InputLabel id=\"cookTime\">Cook Time (in mins)</InputLabel>\n              <TextField\n                id=\"cookTime\"\n                type=\"number\"\n                placeholder=\"Enter the cook time\"\n                onChange={handleCookTimeChange}\n                value={cookTime}\n              />\n            </div>\n          </form>\n        </Grid>\n      </Grid>\n      <Box mb={3} ml={50} pb={3}>\n        <Button\n          onClick={editItem}\n          size=\"medium\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Finished Editing\n        </Button>\n      </Box>\n    </Dialog>\n  );\n}\nexport default EditRecipe;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./Home.css\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  CardActionArea,\n} from \"@material-ui/core\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// import { getRecipes } from \"../actions\";\nimport AddRecipe from \"./AddRecipeModal\";\nimport EditRecipe from \"./EditRecipeModal\";\nimport { getRecipes, loadRecipes } from \"../actions/recipes\";\nimport { mockRecipes } from \"../mockData/recipes\";\n\nconst BoldText = styled.span`\n  font-weight: 700;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  specialsButton: {},\n  addRecipeButton: {\n    left: 10,\n  },\n  navButtonContainer: {\n    marginRight: theme.spacing(3),\n    right: 0,\n    position: \"absolute\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  recipeList: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    // justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginTop: 40,\n  },\n  gridList: {\n    height: \"auto\",\n    flexWrap: \"wrap\",\n\n    overflow: \"auto\",\n  },\n\n  card: {\n    maxWidth: 345,\n    display: \"block\",\n    overflowY: \"scroll\",\n\n    height: \"35vw\",\n\n    backgroundColor: \"#ffefd5\",\n  },\n  media: {\n    height: 400,\n    paddingTop: \"56.25%\", // 16:9\n    marginTop: -190,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const history = useHistory();\n  const recipes = useSelector((state) => state.recipes);\n\n  const [directions, setDirections] = useState({});\n  const [ingredients, setIngredients] = useState({});\n  const [open, setOpen] = useState(false);\n  const [openForEdit, setOpenForEdit] = useState(false);\n  const [currentRecipe, setCurrentRecipe] = useState({});\n\n  useEffect(() => {\n    //get recipes for state\n    if (!recipes) {\n      dispatch(loadRecipes(mockRecipes.recipes));\n    }\n  }, []);\n\n  //open new add new recipe\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  //open edit recipe modal\n  const handleClickEditOpen = (tile) => {\n    setCurrentRecipe(tile);\n    setOpenForEdit(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  const handleEditClose = (value) => {\n    setOpenForEdit(false);\n  };\n  const dispatch = useDispatch();\n\n  const handleNavigateDirectionsClick = (foodItem) => {\n    history.push({\n      pathname: `/directions/${foodItem.uuid}`,\n    });\n  };\n  const handleNavigateIngredientsClick = (foodItem) => {\n    history.push({\n      pathname: `/ingredients/${foodItem.uuid}`,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Recipe List\n          </Typography>\n          <div className={classes.navButtonContainer}>\n            <Button\n              variant=\"outlined\"\n              className={classes.specialsButton}\n              color=\"inherit\"\n              onClick={() => history.push(\"/specials\")}\n            >\n              View the Specials\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.addRecipeButton}\n              color=\"inherit\"\n              onClick={handleClickOpen}\n            >\n              Add Recipe\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <AddRecipe open={open} onClose={handleClose} />\n      <EditRecipe\n        currentRecipe={currentRecipe}\n        open={openForEdit}\n        onClose={handleEditClose}\n      />\n      <div className={classes.recipeList}>\n        <Grid\n          className={classes.gridList}\n          container\n          justify=\"center\"\n          spacing={1}\n        >\n          {recipes.recipesList.map((tile, index) => (\n            <Grid container item xs={12} sm={6} md={4} spacing={0.01}>\n              <Card>\n                <CardActionArea>\n                  {tile.images && (\n                    <CardMedia\n                      className={classes.media}\n                      image={tile.images.medium}\n                      title=\"Paella dish\"\n                      component=\"img\"\n                    />\n                  )}\n                  {!tile.images && (\n                    <CardMedia\n                      className={classes.media}\n                      src={\n                        \"https://www.foodiesfeed.com/wp-content/uploads/2019/06/top-view-for-box-of-2-burgers-home-made.jpg\"\n                      }\n                      title=\"Paella dish\"\n                      component=\"img\"\n                    />\n                  )}\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {tile.title}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {tile.description}\n                    </Typography>\n                  </CardContent>\n                  <CardContent>\n                    <Typography\n                      gutterBottom\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                      component=\"div\"\n                    >\n                      Servings: {tile.servings}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"div\"\n                      gutterBottom\n                    >\n                      Prep time: {tile.prepTime}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"div\"\n                      gutterBottom\n                    >\n                      Cook time: {tile.cookTime}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"div\"\n                      gutterBottom\n                    >\n                      Posted: {tile.postDate}\n                    </Typography>\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"div\"\n                      gutterBottom\n                    >\n                      Edited: {tile.editDate}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n                <CardActions disableSpacing>\n                  <Button\n                    onClick={() => handleNavigateDirectionsClick(tile)}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    View Directions\n                  </Button>\n                  <Button\n                    onClick={() => handleNavigateIngredientsClick(tile)}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    View Ingredients\n                  </Button>\n                  <Button\n                    onClick={() => handleClickEditOpen(tile)}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    Edit\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import produce from \"immer\";\nimport {\n  GET_RECIPES_SUCCESS,\n  GET_CURRENT_RECIPE_SUCCESS,\n  UPDATE_INGREDIENT,\n  ADD_NEW_INGREDIENT,\n  UPDATE_DIRECTION,\n  ADD_NEW_DIRECTION,\n  UPDATE_RECIPE,\n  ADD_RECIPE,\n} from \"../actions/recipes\";\n\nconst initialState = {\n  recipesList: [],\n  currentRecipe: { ingredients: [], directions: [] },\n};\n\nconst recipesReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case GET_RECIPES_SUCCESS:\n        draft.recipesList = action.recipes;\n        draft.loading = false;\n        break;\n\n      case GET_CURRENT_RECIPE_SUCCESS:\n        draft.currentRecipe = action.recipe;\n        draft.loading = false;\n        break;\n\n      case UPDATE_RECIPE:\n        const recipeIndex = draft.recipesList.findIndex(\n          (recipe) => recipe.uuid === action.recipe.uuid\n        );\n        draft.recipesList[recipeIndex] = action.recipe;\n        draft.currentRecipe = action.recipe;\n        break;\n\n      case UPDATE_INGREDIENT:\n        const ingredientIndex = draft.currentRecipe.ingredients.findIndex(\n          (ingredient) => ingredient.uuid === action.ingredient.uuid\n        );\n\n        draft.currentRecipe.ingredients[ingredientIndex] = action.ingredient;\n        const updateIngredientsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[updateIngredientsIndex] = draft.currentRecipe;\n        break;\n\n      case ADD_NEW_INGREDIENT:\n        draft.currentRecipe.ingredients.push(action.ingredient);\n        const newIngredientsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[newIngredientsIndex] = draft.currentRecipe;\n        break;\n\n      case UPDATE_DIRECTION:\n        const directionIndex = action.directionIndex;\n\n        draft.currentRecipe.directions[directionIndex] = action.direction;\n        const updateDirectionsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[updateDirectionsIndex] = draft.currentRecipe;\n        break;\n\n      case ADD_NEW_DIRECTION:\n        draft.currentRecipe.directions.push(action.direction);\n        const newDirectionsIndex = draft.recipesList.findIndex(\n          (recipe) => (recipe.uuid = draft.currentRecipe.uuid)\n        );\n        draft.recipesList[newDirectionsIndex] = draft.currentRecipe;\n        break;\n\n      case ADD_RECIPE:\n        draft.recipesList.push(action.recipe);\n\n        break;\n      default:\n        return draft;\n    }\n  });\n};\n\nexport default recipesReducer;\n","import produce from \"immer\";\nimport { GET_SPECIALS_SUCCESS } from \"../actions/specials\";\n\nconst initialState = {\n  specialsList: [],\n};\n\nconst specialsReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case GET_SPECIALS_SUCCESS:\n        draft.specialsList = action.specials;\n        break;\n      default:\n        return draft;\n    }\n  });\n};\n\nexport default specialsReducer;\n","import { combineReducers } from \"redux\";\n// import ingredients from \"./ingredients\";\nimport recipes from \"./recipes\";\nimport specials from \"./specials\";\n\n// Combine all the reducers\nconst rootReducer = combineReducers({\n  recipes,\n  specials,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducers from \"../reducers\"; //Import the reducer\nimport { createLogger } from \"redux-logger\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\nconst rLogger = createLogger();\nconst persistedReducer = persistReducer(persistConfig, reducers);\n// Connect our store to the reducers\n//export default ( createStore(reducers, applyMiddleware(rLogger, thunk))\n\nexport const store = createStore(\n  persistedReducer,\n  applyMiddleware(rLogger, thunk)\n);\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Ingredients from \"./components/IngredientsPage\";\nimport Directions from \"./components/DirectionsPage\";\nimport Specials from \"./components/SpecialsPage\";\n\nimport Home from \"./components/Home\";\nimport { store, persistor } from \"./state/store\";\n//import persistor from \"../state/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/ingredients/:recipeId\" component={Ingredients} />\n          <Route exact path=\"/directions/:recipeId\" component={Directions} />\n          <Route exact path=\"/specials\" component={Specials} />\n        </Switch>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}